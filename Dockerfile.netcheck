# Minimaler Netztest mit sichtbaren Logs zur Runtime
FROM node:22-bookworm

# Entry script, führt Tests aus und hält Container am Leben, damit Logs sichtbar bleiben
RUN set -eux; \
  cat > /entrypoint.sh <<'SH' \
#!/bin/sh
set -u
fail=0

echo "[netcheck] DNS-Auflösung registry.npmjs.org ..."
node -e "require('dns').resolve('registry.npmjs.org',(e,a)=>{if(e){console.error('DNS FAIL:',e);process.exit(21)}else{console.log('DNS OK:',a)}})" || fail=21

echo "[netcheck] HTTP Test http://example.com ..."
node -e "require('http').get('http://example.com',r=>{console.log('HTTP example.com:',r.statusCode); if(r.statusCode!==200) process.exit(22)}).on('error',e=>{console.error('HTTP FAIL:',e);process.exit(22)})" || fail=22

echo "[netcheck] HTTPS Test https://registry.npmjs.org/ ..."
node -e "require('https').get('https://registry.npmjs.org/',r=>{console.log('HTTPS npmjs:',r.statusCode); if(r.statusCode<200||r.statusCode>=400) process.exit(23)}).on('error',e=>{console.error('HTTPS FAIL:',e);process.exit(23)})" || fail=23

echo "[netcheck] Ergebnis fail=$fail"
if [ "$fail" -ne 0 ]; then
  echo "[netcheck] Netzwerkcheck FEHLGESCHLAGEN mit Code $fail"
else
  echo "[netcheck] Netzwerkcheck OK"
fi
# Container am Leben halten, damit Logs in Portainer sichtbar bleiben
sleep infinity
SH \
  && chmod +x /entrypoint.sh

CMD ["/entrypoint.sh"]